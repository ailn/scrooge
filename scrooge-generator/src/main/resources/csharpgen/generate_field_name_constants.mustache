/** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
public class _Fields
{
    {{#fields}}
    public static {{#constant_name}}{{name}}{{/constant_name}} = new _Fields((short){{key}}, "{{name}}");
    {{/fields}}

    private static final IDictionary<string, _Fields> byName = new Dictionary<string, _Fields>
    {
        {{#fields}}
        { "{{name}}", {{#constant_name}}{{name}}{{/constant_name}} }{{#last}}{{/last}}{{^last}},{{/last}}
        {{/fields}}
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields FindByThriftId(int fieldId)
    {
        switch(fieldId)
        {
            {{#fields}}
            case {{key}}: // {{#constant_name}}{{name}}{{/constant_name}}
                return new _Fields((short){{key}}, "{{name}}");
            {{/fields}}
            default:
                return null;
        }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields FindByThriftIdOrThrow(int fieldId)
    {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new InvalidOperationException("Field " + fieldId + " doesn't exist!");
        return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields FindByName(String name)
    {
        return byName.get(name);
    }

    readonly short ThriftId { get; }
    readonly string FieldName;

    _Fields(short thriftId, String fieldName)
    {
        this.ThriftId = thriftId;
        this.FieldName = fieldName;
    }
}
